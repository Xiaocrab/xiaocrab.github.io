<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[macOS Sierra 睡眠方式設置]]></title>
      <url>%2Fposts%2Ff8a16df0%2F</url>
      <content type="text"><![CDATA[macOS 通過pmset命令設置系統電源管理，其中hibernatemode的值來調整系統睡眠方式。 以下操作和介紹均以 macOS Sierra 10.12 系統為範例，其他版本的 macOS 系統可能稍有不同。如果 Mac 電腦使用沒有問題，請保持系統默認設置，勿隨意修改睡眠方式！ 參數介紹以下內容翻譯自pmset命令的幫助文件（可以運行man pmset查看） macOS 安全睡眠說明 hibernatemode 可以設置的值有 0、3和25。 macOS 系統是否寫入睡眠文件到硬盤也同時取決於standby和autopoweroff的值。要完全禁止睡眠文件，請確保hibernatemode、standby和autopoweroff的值都要設置為 0。 hibernatemode = 0 是桌面電腦的默認設置。系統不會將記憶體備份到硬盤上。系統必須從記憶體中的內容恢復；如果掉電，將丟失記憶體中的內容。這是一種舊的睡眠設置。 hibernatemode = 3 是便攜式電腦的默認設置。系統將存儲一份記憶體的副本到硬盤上，記憶體將持續供電。系統將會從記憶體恢復，除非掉電，迫使系統從硬盤中的睡眠文件恢復。 hibernatemode = 25 只能通過pmset命令來設置。系統將存儲一份記憶體的副本到硬盤上，並將切斷記憶體的供電。系統將從硬盤中的睡眠文件恢復。如果你想以較慢的速度睡眠、恢復，獲得更長的電池壽命，那麽你可以使用這個設置。 官方的說明已經很清楚了，我再簡化一下，系統睡眠的時候： hibernatemode 值為 0：不向硬盤寫入睡眠文件，記憶體保持供電，從記憶體恢復系統（類似於 Windows 系統的「待機」） hibernatemode 值為 3：如果記憶體通電，則從記憶體恢復系統；如果記憶體不通電，則從硬盤中的睡眠文件恢復系統（結合了 0，25 的功能） hibernatemode 值為 25：向硬盤寫入睡眠文件，記憶體斷電，從硬盤中的睡眠文件恢復系統 顯然的hibernatemode = 3這種設置對於 MacBook 來說是最好的設置狀態，也是默認的設置狀態，我們一般不需要進行修改。但是有些用戶偏向於更省電，那麽設置成 25 最好；有些用戶偏向於延長 SSD 壽命，那麽設置成 1 最好。 autopoweroff和standby是到autopoweroffdelay或standbydelay設置的時間後，就開始啟動安全睡眠模式，將記憶體中的數據寫入硬盤中的睡眠文件，然後切斷記憶體的供電。 具體的設置步驟如下： 1. 打開「終端」，輸入12$ pmset -g #顯示當前電源狀態下的設置$ pmset -g custom #顯示所有電源狀態下的設置 注意MacBook 存在插交流電(-c)和電池供電(-b)兩種不同的電源狀態，對於伺服器來說還有UPS供電(-u)的電源狀態） 1234567891011121314151617standbydelay 10800 #standby啟動的時間。單位秒standby 1 #處於睡眠狀態經過設定時間後，記憶體數據寫入硬盤，關閉記憶體供電。 1開啟，0關閉womp 1 #網絡喚醒。 1開啟，0關閉halfdim 1 #顯示器亮度調低時間。單位分鐘hibernatefile /var/vm/sleepimage #睡眠文件位置powernap 1 #PowerNAP是否開啟。 1開啟，0關閉gpuswitch 2 #GPU是否自動切換networkoversleep 0 #此設置影響在系統睡眠期間，macOS網絡如何提供共享網絡服務disksleep 10 #機械硬盤停轉時間。單位分鐘，0關閉sleep 0 #系統睡眠的時間。單位為分鐘，0關閉autopoweroffdelay 28800 #autopoweroff啟動的時間，單位為秒hibernatemode 3 #睡眠方式設置autopoweroff 1 #處於睡眠狀態經過設定時間後，記憶體寫入硬盤，關閉記憶體電源。 1開啟，0關閉ttyskeepawake 1 #遠程用戶活動時防止睡眠。 1開啟，0關閉displaysleep 10 #顯示器關閉時間。單位分鐘，0關閉acwake 0 #電源狀態改變時喚醒。 1開啟，0關閉lidwake 1 #開蓋喚醒Mac。 1開啟，0關閉 2. 修改系統電源管理設置1$ sudo pmset -a(-c|-b|-U) parameter value 實例1. 完全禁止睡眠文件1234$ sudo pmset -a hibernatemode 0$ sudo pmset -a standby 0$ sudo pmset -a autopoweroff 0$ sudo rm /var/vm/sleepimage 2. 寫入睡眠文件，並徹底斷電1$ sudo pmset -a hibernatemode 25 參考文獻 Wikipedia：pmset 詞條]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[茫茫網誌系統中遇見 Hexo]]></title>
      <url>%2Fposts%2F62e856b5%2F</url>
      <content type="text"><![CDATA[快速、簡單且強大的網誌框架——Hexo.io 前一段時間，我的 VPS 沒有及時繳費，結果被強制停機。續費之後，訪問我的 WordPress 網站，結果提示db connection error錯誤。。。Oh，該死的數據庫出問題了！加之 WordPress 是出了名的「臃腫」，訪問的速度非常慢。我便心生了換一個網誌系統的念頭。 尋找既然是重新尋找一個合適的網誌系統，那麼我對它的基本要求是： 開源：開源是最起碼的要求，不然還有什麼自建的意義嘞 支援Markdown：Markdown 的好處不必說，用過一次就忘不了 使用和維護簡單：寫篇文章要各種登入，各種設定，然後三天兩頭出問題，這種系統我是受不了的 按照這個要求展開尋找之後，我做了一個簡單的表格出來（全是開源的系統）。 系統 環境 原生 Markdown 維護難度 WordPress PHP+DB ❤︎❤︎❤︎❤︎ Ghost Node.js+DB Yes ❤︎❤︎❤︎ Typecho PHP+DB Yes ❤︎❤︎❤︎ Jekyll Ruby Yes ❤︎❤︎❤︎ Hexo Node.js Yes ❤︎ 通過以上的比較（雖然不是很準確），可以發現他們幾乎都要使用數據庫來儲存數據，這就給維護帶來了一定的困難。 對於網誌系統來說，不使用數據庫也行的，反而速度更快。網誌的內容不頻繁更新，最多一天更新幾次，其餘的時間數據一直沒變。多數使用了數據庫的網誌系統，為了加快頁面解析的速度，減小伺服器的負擔，做了「靜態化」的處理。 沒有數據庫，減少了對環境的依賴。要使用數據庫，首先得安裝配置一個數據庫，然後還要連線數據庫，接著對數據庫進行操作、幾乎一切的配置和資料都儲存在數據庫裡面啊，整個系統都要依賴數據庫才能執行。數據庫一但歇菜了，整個網站立馬就癱瘓！ 找到了它Hexo 是一個出自臺灣tommy351大神之手，基於 Node.js 的輕量靜態網誌系統。 它 採用Markdown撰寫：簡單高效，專注于寫作，符合當下潮流 沒有數據庫：配置檔案主要是*.yml格式，用文字編輯器就能修改所有配置 靜態系統，速度飛快：快！快！快！ 資源豐富，易於維護：它的官方網站上已經提供了非常詳細的說明，還有豐富的主題和外掛的支援。日常使用只需要幾條命令（甚至是全自動），就能完成文章的發佈 這簡直是一個完美的網誌系統啊！ 開始動手搭建系統 官方網站是 https://hexo.io/ ，提供了多語種支援和詳細的配置指導，在這裏不再展開。 強烈推薦按照官方網站上的步驟來安裝配置 Hexo，民間網誌上可能版本老舊或是作者的粗心大意會有些坑，切記，切記。安裝 Hexo，大致需要 Node.js、git 等環境，沒錯就是這麼簡約！ 裝好 Hexo 之後，開始安裝主題。推薦 NexT 主題，官方網站是 http://theme-next.iissnan.com/ 。製作精良，支援完善。 同樣的還是建議到它的官網上按照步驟配置。 不出意外的話，整個系統就可以開始使用了。你可以把 Hexo 上傳到自己的 Github Pags 或者自己的 VPS 上運行。正如它的官網介紹那樣「快速、簡單且強大」！ 寫篇文章 新建文章（3 種方法任選一種）： 在網站source/_posts下新建一個文章的標題.md文件 使用命令hexo new 文章的標題 安裝 hexo-admin 外掛後，啟動伺服器（執行命令hexo server或hexo s），在瀏覽器打開localhost:端口號/admin，採取網頁中新建 撰寫文章（2 種方法任選一種） 用支持 Markdown 編輯的文本編輯器撰寫 安裝 hexo-admin 外掛後，啟動伺服器，在瀏覽器打開localhost:端口號/admin，採取網頁中撰寫 清除快取檔案和已產生的靜態檔案，執行命令hexo clean 產生靜態檔案，執行命令hexo generate或hexo g 部署網站，執行命令hexo deploy或hexo d Tipshexo-admin外掛：在本地瀏覽器上編輯文章12npm install hexo-admin --save# 更多介紹 https://github.com/jaredly/hexo-admin hexo-deployer-git外掛：用Git來部署12npm install hexo-deployer-git --save# 更多介紹 https://github.com/hexojs/hexo-deployer-git hexo-filter-flowchat外掛：生成流程圖12npm install hexo-filter-flowchart --save# 更多介紹 https://github.com/bubkoo/hexo-filter-flowchart]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[公共 DNS 伺服器推薦]]></title>
      <url>%2Fposts%2F77bdf612%2F</url>
      <content type="text"><![CDATA[DNS 是 Internet 上專門用來域名解析的服務。在接入 Internet 的時候，運營商會提供一對 DNS 伺服器地址，這對地址往往會被運營商所利用，它們篡改解析紀錄，投放廣告或者屏蔽某些網站，即 DNS劫持。 拒絕 DNS 劫持，請設置安全可靠的 DNS 伺服器地址！ 國際通用Cisco OpenDNS 208.67.222.222 208.67.220.220 官網 https://www.opendns.com/✭ 提供付費定製服務✭ 支援 Google Edns Client Subnet 協議 Google Public DNS 8.8.8.8 8.8.4.4 官網 https://developers.google.com/speed/public-dns/✭ 提供付費定製服務✭ 支援 Google Edns Client Subnet 協議 OpenNIC [Open] 按區域查詢設定 官網 https://servers.opennicproject.org/ V2EX DNS 178.79.131.110 官網 http://dns.v2ex.com/ 中國大陸DNSPod DNS+ 119.29.29.29 官網 https://www.dnspod.cn/Products/Public.DNS☭ 支援 Google Edns Client Subnet 協議 中科大 DNS 202.141.160.99 202.141.176.99 百度 DuDNS 180.76.76.76 官網 http://dudns.baidu.com/ 阿里 AliDNS 223.5.5.5 223.6.6.6 官網 http://www.alidns.com/ oneDNS 112.124.47.27 114.215.126.16 官網 http://www.onedns.net/ 南京信風 114DNS 114.114.114.114 114.114.115.115 官網 https://www.114dns.com/☭ 提供付費定製服務 CNNIC sDNS 1.2.4.8 210.2.4.8 官網 http://www.sdns.cn/☭ 提供付費定製服務 推薦方案✭ 國際通用 主 DNS：8.8.8.8 輔 DNS：208.67.222.222 ✭ 中國大陸 主 DNS：119.29.29.29 輔 DNS：8.8.8.8 設定 DNS 伺服器 參見 Google Publish DNS Get Started]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[再見了，QQ 空間]]></title>
      <url>%2Fposts%2F84670bcd%2F</url>
      <content type="text"><![CDATA[自 2007 年第一篇日誌發佈到現在已經 9 年多了，當時只是爲了「點亮圖標」而開通。 漸漸地，在那裏累計了日誌 240 餘篇，圖片 1000 餘張，說說 800 餘條……但有價值的東西其實很少。甚至還有幾段時間，每天把大部分時間都花在了它身上……浪費了不少時間。 QQ 空間從發佈到現在已經經歷了好幾次比較大的改版，但是直到現在，我在 6 年前提出的不足之處仍然沒有解決。它獲得大量的流量完全是靠與 QQ 客戶端的集成，在功能上沒有亮點。 隨着 SNS 軟件的多元化，QQ 早已不是每個人必須的 SNS 軟件，甚至好多人早已放棄使用 QQ。這就意味着，我如果把這篇文章發表在 QQ 空間的話，只有爲數不多的，至今還在使用 QQ 及 QQ 空間服務的人才能看到。它顯然已經沒有了往日的豐華，是時候該放棄了。 其實在去年我已經放棄了 QQ 空間，只是還沒下手徹底關閉它。 終於，我做出了一個艱難的決定：2016年8月1日正式關閉我的 QQ 空間 可能以後也不會重新開通。 依據「斷 · 舍 · 離」的思想，無用的東西應該及時放棄，才能享受自由的生活，否則它只能是個累贅，沒有絲毫好處。 歡迎訪問 https://www.xiaocrab.net/ ，一個新的時代在這裏。]]></content>
    </entry>

    
  
  
</search>
